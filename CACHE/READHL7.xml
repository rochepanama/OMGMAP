<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="21" zv="Cache for Windows (x86-32) 2007.1.3 (Build 607U)" ts="2013-09-04 17:18:40">
<Routine name="READHL7" type="MAC" languagemode="0" timestamp="62978,69239"><![CDATA[
READHL7
 /**
  *	Procedure to read incoming HL7 files to create requests on Omega. The files
  * must be named in the following format: 
  *		requestno.pet
  * 
  * Where "requestno" is the request number sent to Omega and ".pet" is the extension (lowercase)
  *
  * @author 	<a href="mailto:ivan.quintero@roche.com">Ivan Quintero</a>
  * @requires	^WCONF("P",412)	........... Path incoming HL7 files are store
  * @requires	^WCONF("P",3) 	........... Number of digits in the request number
  * @requires	errorfolder	 	........... Path to store error HL7 files
  *
  * @example	>do ^READHL7
 **/
 
	k ^debug
	
	// ** configuracion de OMEGA
	
	// maximum number of digits for a request
	set digipet = $p($g(^WCONF("P",3)),"#",2)
	
	// folder where HL7 files are saved
	set folder = $p($g(^WCONF("P",412)),"#",2)
	
	// Errof folder: store .pet files that failed to create a record in Omega
	set errorfolder = "C:\IN\errors"
 
	// ** leer archivos de folder
	set filesrs = ##class(%Library.ResultSet).%New("%Library.File:FileSet")
	do filesrs.Execute(folder,"*.pet")
 
	while(filesrs.Next())
	{
      set filefullpath = filesrs.Get("Name")
 
 	  // file name
 	  set filename = ##class(%File).GetFilename(filefullpath)
 	  
      set HL7 = ##class(OMGMAP.ParseHL7).%New()
      
      // parse HL7 file
      do HL7.readFile(filefullpath)
      
      // log warnings and errors
      set errorflag = ""
      if (HL7.isHL7 '= 1) 						{ do ##class(OMGMAP.Log).logEvent(10,3,filefullpath)  set errorflag = 1 }
 	  if ($length(HL7.requestno) > digipet) 	{ do ##class(OMGMAP.Log).logEvent(200,3,HL7.recordPID) set errorflag = 1 }
 	  if (HL7.requestno = "") 					{ do ##class(OMGMAP.Log).logEvent(150,3,HL7.recordPID) set errorflag = 1 }
 	 		  
 	  if (errorflag = 1)
 	  {
	 	  // new path of the HL7 file
	 	  set errorfile = errorfolder_"/"_filename
	 	  
	 	  // copy invalid file to error folder
	 	  do ##class(%File).CopyFile(filefullpath,errorfile)
	 	  
	 	  // delete invalid file
		  do ##class(%File).Delete(filefullpath)	  
 	  }
 	  w "RequestNo: "_HL7.requestno,!
 	  // procesar si es archivo HL7
      if (HL7.isHL7 = 1)&($length(HL7.requestno) < digipet) & (HL7.requestno '= "")
      {
		write "Peticion: "_HL7.requestno,!
		write "No. Historia: "_HL7.patientid,!
		write "Nombre Completo: "_HL7.lastname_", "_HL7.firstname,!
		write "Fecha y hora: "_HL7.requestdatetime,!
		write "Fecha: "_HL7.requestdate,!
		write "Hora: "_HL7.requesttime,!
		write "Sexo: "_HL7.sex,!
		write "Fecha Nac.: "_HL7.dob,!
		write "Priority: "_HL7.priority,!
		write "Origin: "_HL7.origin,!
		write "Med.Service: "_HL7.medicalservice,!
		write "Pat. Type: "_HL7.patienttype,!
		
		set counter = $order(HL7.tests(""))
		while counter '=""
		{	      
			write "..."_HL7.tests(counter,"testcode")_"("_HL7.tests(counter,"action")_")",!
		
			set counter = $order(HL7.fieldsOBR(counter))
		}
		write "-----------------------------------------",!
      	
      	// **********************************************
      	// * Save to OMEGA 
      	// **********************************************
      	
		// save patient
		set ret = $$savePatient(HL7.requestno,HL7.patientid,HL7.fullname,HL7.dob,HL7.sex,HL7.medicalservice,HL7.host,HL7.motive,HL7.dx,HL7.requestdatetime,HL7.priority,HL7.origin,HL7.patienttype,HL7.doctor)
			      	
		// save request
		set ret = $$saveRequest(HL7.requestno,HL7.requestdate,HL7.patientid,HL7.doctor,HL7.medicalservice,HL7.origin,HL7.dx,HL7.observation,HL7.destination,HL7.bed,HL7.priority,HL7.motive,HL7.patienttype,HL7.episode,HL7.requesttime)
					
		// save tests
		set counter = $order(HL7.tests(""))		
		while counter '=""
		{
			set testcode = HL7.tests(counter,"testcode")
			set action = HL7.tests(counter,"action")
			
			do saveTest(HL7.requestno,testcode,action,HL7.requestdate)      	     	
			set counter = $order(HL7.tests(counter))		
		}
		
		// delete processed file
		do ##class(%File).Delete(filefullpath)
					
      }
      
      // terminate object
      k HL7
	}
	quit
	
	
saveRequest(requestno,requestdate,patientid,doctor,medicalservice,origin,dx,observation,destination,bed,priority,motive,patienttype,episode,requesttime)
{
	set user = "~omega~"
	set data=requestdate_"#"_patientid_"#"_doctor_"#"_medicalservice_"#"_origin_"#"_dx_"#"_observation_"#"_destination_"#"_bed_"##"_priority_"#"_motive_"#"_patienttype_"#"_episode_"#"_requesttime_"#######"
 
	// $$Pet^WINALTA1(user,pet,DatPet,"","","","",1)	(Urgente)
	// $$Pet^WINALTA1(user,pet,DatPet) (Rutina)
	set ^debug($h,"petdata") = data
	set ret = $$Pet^WINALTA1(user,requestno,data)
	quit ret
}
 
savePatient(requestno,patientid,fullname,dob,sex,medicalservice,host,motive,dx,requestdate,priority,origin,patienttype,doctor)
{
	set user = "~omega~"
 
	// P|1|77764|84-67-87|^12345678|OBAMA^BARAK^FERNANDEZ||14980101|M|||||10000||||||||0101898|1010|20121004141922^|R|12||A|||||191|||
 
	// build HL7 P record for Omega
	set HL7p = "P|1|"_requestno_"|"_patientid_"|^12345678|"_fullname_"||"_dob_"|M|||||"_motive_"||||||||"_dx_"|"_medicalservice_"|"_requestdate_"|"_priority_"|"_origin_"||"_patienttype_"|||||"_doctor_"|||"
	
	set ^debug($h,"patdata") = HL7p
	
	s ret=$$GrabaPac^WINIES2(user,HL7p,host,medicalservice,"")
	
	quit ret	
}
 
saveTest(requestno,testcode,action,requestdate)
{
	set user = "~omega~"
	set year = $extract(requestdate,1,4)
	
	
	if ((action = "A") || (action = "N") || (action = ""))
	{
		set ^debug($h,"testdata")=testcode_"#"_action_"#"_requestno_"#"_requestdate
		// alta a la prueba si no es funcional
		
		if (testcode '= "")
		{
		 	quit $$altaCodi^WINALTA(user,requestno,testcode,1)							
		}
		else
		{
			quit ""
		}
	}
 
	if (action = "C")
	{
		// dar de baja a la prueba
		quit $$baixaCod^WINALTA(user,requestno,testcode,1,year)
	}
}
]]></Routine>
</Export>
